{
  "name": "com.unity.behavior",
  "displayName": "Behavior",
  "version": "1.0.7",
  "unity": "6000.0",
  "unityRelease": "16f1",
  "description": "Unity Behavior is a graph-based tool to create and run behavior trees. Besides including a comprehensive library of pre-built nodes, the interface provides node customization options and real-time debugging. While fully functional on its own, a Unity Muse subscription enhances your experience by using large language models (LLM) to generate behavior trees from text prompts and create code for custom action nodes. This subscription, although optional, provides a powerful addition for those looking to accelerate their development process.\n\nA demo showcasing this package can be found in the Asset Store <a href=https://assetstore.unity.com/packages/templates/tutorials/behavior-demo-for-unity-298313>https://assetstore.unity.com/packages/templates/tutorials/behavior-demo-for-unity-298313</a>.",
  "keywords": [
    "ai",
    "behaviour trees"
  ],
  "dependencies": {
    "com.unity.dt.app-ui": "2.0.0-pre.14",
    "com.unity.modules.unitywebrequest": "1.0.0",
    "com.unity.modules.animation": "1.0.0",
    "com.unity.modules.ai": "1.0.0",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.particlesystem": "1.0.0",
    "com.unity.nuget.newtonsoft-json": "3.2.1",
    "com.unity.burst": "1.7.2",
    "com.unity.collections": "2.1.4"
  },
  "relatedPackages": {
    "com.unity.behavior.tests": "0.0.0"
  },
  "samples": [
    {
      "displayName": "Unity Behavior Example",
      "description": "A simple Behavior example.",
      "path": "Samples~/Example"
    },
    {
      "displayName": "Runtime Serialization",
      "description": "A small example showing how to serialize and deserialize the active state of a behavior tree at runtime.",
      "path": "Samples~/Serialization"
    }
  ],
  "_upm": {
    "changelog": "### Added\n- Added new Interrupted status and ensure that all incomplete child nodes of Parallel composites are marked as interrupted.\n- Added a checkbox to the behavior project settings to contnrol if nodes and condition scripts should automatically open after creation.\n\n### Changed\n- Selection of a node now brings it to the front.\n- Selection of a node in a sequence brings the sequence to the front.\n- Small tweak to node selected border radius.\n- Nodes replaced with Placeholder Nodes will not be replaced in the asset, only in the UI, reducing risk in recovery.\n- When saving a new Node/Condition from the wizard, a postfix of the node type (Action/Modifier/Flow) or Condition won't be added to the suggested filename if it already ends with it.\n- Updated AppUI dependency to 2.0.0-pre14 and created a settings file to exclude AppUI Shaders and execution from builds. This can be overriden with a custom user App UI Settings file.\n- Exposed `SaveFolderEventChannels` in the Project Settings -> Behavior menu.\n- Improved documentation description for the `GameObject` API inside the `Node` class.\n- Improved asset rebuilding and saving mechanism to avoid frequent regeneration.\n\n### Fixed\n- Editing Subgraph Representation will no longer add duplicate variables.\n- Softened search fields filtering so that, for example, 'int list' and 'list int' will return 'Integer List'.\n- Fixed WaitForAnyComposite not ending correctly yielding multiple runs of child nodes. \n- Editing a node with the node wizard (edit node definition) will no longer remove to Action/Modifer/Sequence postfix.\n- Fixed an issue where automatic save path for enums and event channels saved the file name into the save path settings and caused an infinite loop when saving the next file.\n- Remove erroneous references to Muse in the API docs.\n- Improved Undo support for editing Behavior Agent on a GameObject.\n- Adding a Run In Parallel node and its various types from the branch dialog will set the correct mode.\n- Subassets of Graph and Blackboard will have their names track more correctly with the main asset.\n- BehaviorWindow will now close during autosave if its asset is invalid.\n\n### Known Issues\n- Deleting a behavior graph asset while the window is open can cause the graph editor window to be stuck and the user will need to reset their layout to get rid of it.\n- Runtime serialization of nodes in user assemblies don't serialize some properties correctly.\n- Editing fields in Run Subgraph node with subgraph representation doesnâ€™t update the inspector values."
  },
  "upmCi": {
    "footprint": "339e37c5aa8cddccd01430036f028feaba4242c3"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.behavior@1.0/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.designer-monorepo.git",
    "type": "git",
    "revision": "d89240d0dc22380308fdeab7d6272b9bd5a86a98"
  },
  "_fingerprint": "fbb071b45f811840b4181a70083236ddf83b68cf"
}
